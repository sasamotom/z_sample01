{"version":3,"file":"./htdocs/assets/ts/app.js","mappings":";;;;;;;;;;;AAAA;;;AAEA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAxBA;;;;;;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACvBA;AAEA;AACA;AACA;AACA","sources":["webpack://nadia-web-starter-kit/./src/Users/sasamoto.m/work/git/z_sample01/src/assets/ts/class/Sample.ts","webpack://nadia-web-starter-kit/webpack/bootstrap","webpack://nadia-web-starter-kit/./src/Users/sasamoto.m/work/git/z_sample01/src/assets/ts/index.ts"],"sourcesContent":["// サンプルクラス（TS）\n\nexport class Sample {\n  private _no: number;      // 番号\n  private _text: string;    // テキスト\n\n  //----------------------------------------------------\n  // 機能： コンストラクタ\n  // 引数： no     番号（必須）\n  //       text   文字列\n  // 戻値： なし\n  //----------------------------------------------------\n  constructor(no: number, text?: string) {\n    // データを保存\n    this._no = no;\n    this._text = text ?? 'テキスト引数が未設定';\n  }\n\n  //----------------------------------------------------\n  // 機能： ログ表示\n  // 引数： なし\n  // 戻値： なし\n  //----------------------------------------------------\n  log() {\n    console.log(this._no + '：' + this._text);\n  }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","import { Sample } from './class/Sample';\n\nwindow.addEventListener(\"DOMContentLoaded\", () => {\n  const sample = new Sample(1, 'てきすとひきすう');\n  sample.log();\n});\n"],"names":[],"sourceRoot":""}